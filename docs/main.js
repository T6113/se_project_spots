!function(){"use strict";const e=(e,t,r)=>{const n=t.id+"-error";e.querySelector("#"+n).textContent="",t.classList.remove(r.inputErrorClass)},t=(e,t,o)=>{(e=>e.some((e=>!e.validity.valid)))(e)?r(t,o):n(t,o)},r=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},n=(e,t)=>{e.classList.remove(t.inactiveButtonClass),e.disabled=!1},o=(t,r,n)=>{r.forEach((r=>{e(t,r,n)}))},a={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error"};function s(e,t,r=e.textContent,n=`${r.slice(0,-1)}ing...`){t?(e.dataset.originalText=e.textContent,e.textContent=n):e.textContent=e.dataset.originalText||r}const c=new class{constructor({baseUrl:e,headers:t}){this._baseUrl=e,this._headers=t}checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this.checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this.checkResponse)}PostCards(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this.checkResponse)}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this.checkResponse)}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this.checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this.checkResponse)}handleLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this.checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"0cbcd021-9e1a-4910-8e9a-26f9b65490b3","Content-Type":"application/json"}});c.getAppInfo().then((([e,t])=>{console.log(e),e.forEach((function(e){const t=H(e);J.append(t)})),$.src=t.avatar,E.textContent=t.name,k.textContent=t.about})).catch(console.error);const i=document.querySelector(".profile__edit-btn"),l=document.querySelector("#edit-profile-modal"),d=document.querySelector(".profile__avatar-btn"),u=l.querySelector(".modal__close-btn"),m=l.querySelector(".modal__form"),_=l.querySelector("#profile-name-input"),h=l.querySelector("#profile-description-input"),f=document.querySelector(".profile__add-btn"),y=document.querySelector("#new-post-modal"),p=y.querySelector(".modal__close-btn"),v=y.querySelector(".modal__submit-btn"),b=y.querySelector(".modal__form"),S=y.querySelector(" #card-image-input"),q=y.querySelector(" #card-caption-input"),E=document.querySelector(".profile__title"),k=document.querySelector(".profile__description"),L=document.querySelector("#avatar-modal"),C=L.querySelector(".modal__close-btn"),g=L.querySelector(".modal__submit-btn"),x=L.querySelector(".modal__form"),U=L.querySelector("#profile-avatar-input"),$=document.querySelector(".profile__avatar"),A=document.querySelector("#delete-modal"),I=A.querySelector(".modal__form"),T=document.querySelector(".modal__submit-btn_cancel"),D=A.querySelector(".modal__close-btn_confirmation_delete"),P=document.querySelector("#preview-modal"),R=P.querySelector(".modal__close-btn"),w=P.querySelector(".modal__image"),B=P.querySelector(".modal__caption");let N,O;const j=document.querySelector("#card-template").content.querySelector(".card"),J=document.querySelector(".cards__list");function H(e){const t=j.cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-btn");let a=e.isLiked;return a&&o.classList.add("card__like-btn_active"),n.src=e.link,n.alt=e.name,r.textContent=e.name,o.addEventListener("click",(()=>{c.handleLikeStatus(e._id,a).then((e=>{a=!a,a?o.classList.add("card__like-btn_active"):o.classList.remove("card__like-btn_active")})).catch(console.error)})),t.querySelector(".card__delete-btn").addEventListener("click",(r=>function(e,t){N=e,O=t,z(A)}(t,e._id))),n.addEventListener("click",(()=>{w.src=e.link,w.alt=e.name,B.textContent=e.name,z(P)})),t}function z(e){e.classList.add("modal_is-opened"),document.addEventListener("keydown",G)}function M(e){e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",G)}i.addEventListener("click",(function(){_.value=E.textContent,h.value=k.textContent,o(m,[_,h],a),z(l)})),u.addEventListener("click",(function(){M(l)})),f.addEventListener("click",(function(){z(y)})),p.addEventListener("click",(function(){M(y)})),R.addEventListener("click",(function(){M(P)})),m.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;s(t,!0),c.editUserInfo({name:_.value,about:h.value}).then((e=>{E.textContent=e.name,k.textContent=e.about,M(l)})).catch(console.error).finally((()=>{s(t,!1)}))})),b.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;s(t,!0),c.PostCards(q.value,S.value).then((e=>{const t=H(e);J.prepend(t),b.reset(),r(v,a),M(y)})).catch(console.error).finally((()=>{s(t,!1)}))}));const F=document.querySelectorAll(".modal");function G(e){"Escape"===e.key&&M(document.querySelector(".modal_is-opened"))}d.addEventListener("click",(()=>{o(x,[U],a),z(L)})),C.addEventListener("click",(()=>{M(L)})),x.addEventListener("submit",(e=>{!function(e,t){t.preventDefault();const n=t.submitter;s(n,!0),c.editAvatarInfo(U.value).then((t=>{console.log(t),e.src=t.avatar,x.reset(),r(g,a),M(L)})).catch(console.error).finally((()=>{s(n,!1)}))}($,e)})),I.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;s(t,!0,"Delete"),c.deleteCard(O).then((()=>{N.remove(),M(A)})).catch(console.error).finally((()=>{s(t,!1,"Delete")}))})),T.addEventListener("click",(()=>{M(A)})),D.addEventListener("click",(()=>{M(A)})),F.forEach((e=>{e.addEventListener("mousedown",(t=>{t.target.classList.contains("modal")&&M(e)}))})),(r=>{document.querySelectorAll(r.formSelector).forEach((n=>{((r,n)=>{const o=Array.from(r.querySelectorAll(n.inputSelector)),a=r.querySelector(n.submitButtonSelector);t(o,a,n),o.forEach((s=>{s.addEventListener("input",(function(){((t,r,n)=>{r.validity.valid?e(t,r,n):((e,t,r,n)=>{const o=t.id+"-error";e.querySelector("#"+o).textContent=r,t.classList.add(n.inputErrorClass)})(t,r,r.validationMessage,n)})(r,s,n),t(o,a,n)}))}))})(n,r)}))})(a)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,